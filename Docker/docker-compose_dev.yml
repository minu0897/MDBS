services:
  api:
    build:
      context: ..
      dockerfile: Docker/dockerfile
      target: dev
    env_file: ../BE/.env.dev          # 여기에 기본값들 (.env.dev)
    environment:                      # ← 여기 추가
      APP_PROFILE: dev
      PYTHON_ORACLEDB_THIN: "1"       # oracledb 얇은 모드 강제
      TNS_ADMIN: ""                   # TNS 경로 무력화(빈 문자열)
      ORACLE_HOME: ""                 # Thick 모드 유도 방지
    command: flask --app BE/app.py run --host=0.0.0.0 --port=5000 --debug
    depends_on: []
    ports:
      - "5000:5000"
    volumes:
      - ..:/app:cached

  web:
    build:
      context: ..
      dockerfile: Docker/fe.dockerfile
    env_file: ../FE/.env.dev
    environment:
      WATCHPACK_POLLING: "true"   
    ports:
      - "5173:5173"
    volumes:
      - ../FE:/app
    depends_on:
      - api
    command: >
      sh -lc "
        if [ ! -d node_modules ] || ! cmp -s package-lock.json .deps_ok; then
          echo '→ installing deps...'; npm ci && cp package-lock.json .deps_ok;
        fi;
        npm run dev
      "
